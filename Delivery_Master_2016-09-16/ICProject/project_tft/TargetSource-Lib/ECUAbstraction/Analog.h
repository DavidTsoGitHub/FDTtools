/*****************************************************************/
/*                                                               */
/* FILE        : Analog.h                                        */
/* DATE        : 2015-06-15                                      */
/* AUTHOR      : Cao Wei                                         */
/* DESCRIPTION : header file of Indicator module                 */
/* HISTORY     : 1.0.0 release for the first time.               */
/*                                                               */
/* NOTE        : All Rights reserved by DETC, Technology Centre  */
/*               Last Modified By Cao Chenguang on 2015-06-17    */
/*                                                               */
/*****************************************************************/
#ifndef ANALOG_H
#define ANALOG_H

/*TODO : the following codes are generated by GUI*/
#define ANALOG_SIGNAL_NUM         22u
#define ANALOG_CHANNEL_NUM         8u
#define ANALOG_BUF_SIZE            16u

#define IGN_VOLT_IND               0u

#define REF_VOLT_IND               1u

#define ENGINE_OIL_LOW_IND         2u
#define ENIGIN_MAINTAN_IND         3u
#define ENIGIN_STOP_IND            4u
#define WATER_TEMP_HIGH_IND        5u
#define WATER_LEVEL_LOW_IND        6u
#define MIL_TELLTALE_IND           7u
#define TYRE_PRESSURE_LOW_IND      8u
#define TRACTOR_ABS_IND            9u

#define BACK_RES_PRESSURE_SEN_IND  10u
#define FRONT_RES_PRESSURE_SEN_IND 11u
#define PARK_PRESSURE_SEN_IND      12u
#define FRONT_LIMITER_AIRPRESSURE  13u
#define BACK_LIMITER_AIRPRESSURE   14u
#define PARK_AIRPRESSURE_PWR_DIAG  15u
#define FRONT_AIRPRESSURE_PWR_DIAG 16u
#define BACK_AIRPRESSURE_PWR_DIAG  17u

#define SPD_PWR_DIAG               18u

#define SPD_SIG_DIAG               19u

#define FUEL_LEVEL_SEN_IND         20u

#define GEARBOX_TEMPERATURE_IND    21u

typedef enum
{	
	DIRECT_ANALOG,
	INDIRECT_ANALOG,
	DUMMY
}AnalogType;

/* configuration section */
static const AnalogType AnalogConf[ANALOG_CHANNEL_NUM] = 
{
	DIRECT_ANALOG,
	DIRECT_ANALOG,
	INDIRECT_ANALOG,
	INDIRECT_ANALOG,
	DIRECT_ANALOG,
	DIRECT_ANALOG,
	DIRECT_ANALOG,
	DIRECT_ANALOG
};
/* end of configuration section */

/*
 * Name        : ECU_AnalogInput_Init
 * Description : Initialize AD input module
 * Arguments   : none
 * Return      : none
 */
extern void ECU_AnalogueInput_Init(void);

/*
 * Name        : BSP_ADCRunnableInit
 * Description : Initialize AD input module
 * Arguments   : none
 * Return      :     0: success
 *               other: TBD
 */
extern uint16 BSP_ADCRunnableInit(void);

/*
 * Name        : ECU_ADC_Runnable
 * Description : runnable for AD input module, 5ms
 * Arguments   : none
 * Return      : none
 * Note        : This function might be blocked!
 */
extern void ECU_ADC_Runnable(void);

#endif
